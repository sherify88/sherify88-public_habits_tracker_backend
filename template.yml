AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  Habits Tracker Backend - NestJS Application. This version includes X-Ray tracing.

Globals:
  Function:
    Timeout: 30
    MemorySize: 1024
    Runtime: nodejs18.x
    Environment:
      Variables:
        NODE_ENV: !Ref Environment
        USE_FILE_STORAGE: "true"
        PORT: "3000"

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - stage
      - prod
    Description: Environment name

Resources:
  # Lambda Function
  HabitsTrackerFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: nodejs18.x
    Properties:
      CodeUri: dist/
      Handler: src/main.handler
      FunctionName: !Sub "habits-tracker-${Environment}"
      Description: Habits Tracker Backend API
      Environment:
        Variables:
          NODE_ENV: !Ref Environment
          USE_FILE_STORAGE: "true"
          PORT: "3000"
          HABITS_S3_BUCKET: !Ref HabitsTrackerBucket
          JWT_SECRET_NAME: !Sub "habits-tracker/${Environment}/jwt-secret"
          JWT_EXPIRATION_TIME: 604800 # 1 week in seconds
          WEB_VERSION: "1.2.0"
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
            RestApiId: !Ref HabitsTrackerApi
      Tracing: Active
      Policies:
        - CloudWatchLogsFullAccess
        - S3CrudPolicy:
            BucketName: !Ref HabitsTrackerBucket
        - Statement:
            - Effect: Allow
              Action:
                - "secretsmanager:GetSecretValue"
              Resource: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:habits-tracker/${Environment}/jwt-secret-*"

  # API Gateway
  HabitsTrackerApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Environment
      TracingEnabled: true
      Name: !Sub "habits-tracker-api-${Environment}"
      BinaryMediaTypes:
        - multipart/form-data

  # S3 Bucket for file storage
  HabitsTrackerBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "habits-tracker-storage-${Environment}-${AWS::AccountId}"
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldVersions
            Status: Enabled
            NoncurrentVersionExpiration:
              NoncurrentDays: 30
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  # CloudWatch Log Group
  HabitsTrackerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/habits-tracker-${Environment}"
      RetentionInDays: 14

Outputs:
  # API Gateway URL
  ApiUrl:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${HabitsTrackerApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/"
    Export:
      Name: !Sub "${AWS::StackName}-ApiUrl"

  # Lambda Function ARN
  LambdaFunctionArn:
    Description: "Lambda Function ARN"
    Value: !GetAtt HabitsTrackerFunction.Arn
    Export:
      Name: !Sub "${AWS::StackName}-LambdaArn"

  # S3 Bucket Name
  S3BucketName:
    Description: "S3 Bucket for file storage"
    Value: !Ref HabitsTrackerBucket
    Export:
      Name: !Sub "${AWS::StackName}-S3Bucket"

  # CloudWatch Log Group
  LogGroupName:
    Description: "CloudWatch Log Group"
    Value: !Ref HabitsTrackerLogGroup
    Export:
      Name: !Sub "${AWS::StackName}-LogGroup"
